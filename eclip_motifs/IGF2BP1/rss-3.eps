%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox:-10.5696 -83.3411 45.6436 10
/mapa {
  6 dict begin
  /f exch def /a1 exch def /n a1 length def /a2 n array def
  0 1 n 1 sub {/i exch def /e a1 i get def a2 i e f put} for
  a2 end
} bind def
/drawpairs {
  gsave newpath 0.7 setgray 3 setlinewidth [7 4.01] 7 setdash
  pairs {aload pop xy exch get aload pop moveto xy exch get aload pop lineto} forall
  stroke grestore
} bind def
/fxy {exch xy exch get aload pop 3 -1 roll exec} bind def % int proc fxy -
/drawbackbone {
  gsave newpath 0.2 setgray 0.8 setlinewidth
  0 {moveto} fxy 0 {4 0 360 arc gsave stroke grestore 1 setgray fill} fxy
  gsave newpath 0.2 setgray 0.8 setlinewidth
  0 {moveto} fxy -1 gaps aload pop 1 {2 copy eq {3 add {moveto} fxy 4 add}
    {dup {lineto} fxy 1 add} ifelse dup xy length ge {exit} if} loop
  stroke grestore
} bind def
/drawgaps {
  gsave newpath 0.2 setgray 0.8 setlinewidth [1 3] 0 setdash
  gaps {1 sub dup {moveto} fxy 1 add dup {lineto} fxy
    2 add dup {moveto} fxy 1 add {lineto} fxy} forall
  stroke grestore
} bind def
/drawloop {
  gsave newpath 0 setgray 0.8 setlinewidth
  unpairs {xy exch get aload pop 2 copy moveto 0.5 0 360 arc} forall
  stroke grestore
} bind def
/drawbases {
  gsave newpath 0 setgray 0.8 setlinewidth
  0 xy {{2.4 sub} mapa aload pop moveto dup seq exch 1 getinterval false charpath
    gsave 2.5 setlinewidth 1 setgray stroke grestore fill 1 add} forall
  stroke grestore
} bind def
/xy [
[0 0]
[10.037 -11.1472]
[25.037 -11.1472]
[32.537 -24.1376]
[25.037 -37.1279]
[35.6436 -47.7345]
[35.6436 -62.7345]
[25.037 -73.3411]
[10.037 -73.3411]
[-0.569643 -62.7345]
[-0.569643 -47.7345]
[10.037 -37.1279]
[2.53696 -24.1376]
] def
/pairs [
[1 12]
[4 11]
] def
/unpairs [0 2 3 8 9 10 ] def
/gaps [5 ] def
/seq (  C          ) def
/Courier findfont 8 scalefont setfont 1 setlinejoin 1 setlinecap
drawbackbone drawgaps drawpairs drawloop drawbases showpage
