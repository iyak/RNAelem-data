%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox:-44.2365 -10 23.7069 98.7811
/mapa {
  6 dict begin
  /f exch def /a1 exch def /n a1 length def /a2 n array def
  0 1 n 1 sub {/i exch def /e a1 i get def a2 i e f put} for
  a2 end
} bind def
/drawpairs {
  gsave newpath 0.7 setgray 3 setlinewidth [7 4.01] 7 setdash
  pairs {aload pop xy exch get aload pop moveto xy exch get aload pop lineto} forall
  stroke grestore
} bind def
/fxy {exch xy exch get aload pop 3 -1 roll exec} bind def % int proc fxy -
/drawbackbone {
  gsave newpath 0.2 setgray 0.8 setlinewidth
  1 {moveto} fxy -1 gaps aload pop 1 {2 copy eq {3 add {moveto} fxy 4 add}
    {dup {lineto} fxy 1 add} ifelse dup xy length 1 sub ge {exit} if} loop
  stroke grestore
} bind def
/drawgaps {
  gsave newpath 0.2 setgray 0.8 setlinewidth [1 3] 0 setdash
  gaps {1 sub dup {moveto} fxy 1 add dup {lineto} fxy
    2 add dup {moveto} fxy 1 add {lineto} fxy} forall
  stroke grestore
} bind def
/drawends {
  gsave newpath 0.2 setgray 0.8 setlinewidth [1 3] 0 setdash
  0 {moveto} fxy 1 {lineto} fxy
  xy length 2 sub {moveto} fxy xy length 1 sub {lineto} fxy
  stroke grestore
} bind def
/drawloop {
  gsave newpath 0 setgray 1.5 setlinewidth
  unpairs {xy exch get aload pop 2 copy moveto 0.5 0 360 arc} forall
  stroke grestore
} bind def
/drawbases {
  gsave newpath 0 setgray 0.8 setlinewidth
  0 xy {{2.4 sub} mapa aload pop moveto dup seq exch 1 getinterval false charpath
    gsave 2.5 setlinewidth 1 setgray stroke grestore fill 1 add} forall
  stroke grestore
} bind def
/xy [
[0 0]
[-14.7244 2.86213]
[-24.1642 14.5193]
[-23.9024 29.517]
[-14.0615 40.8377]
[-27.4266 47.6475]
[-34.2365 61.0126]
[-31.89 75.828]
[-21.2834 86.4346]
[-6.46805 88.7811]
[6.89704 81.9712]
[13.7069 68.6061]
[11.3604 53.7908]
[0.753783 43.1842]
[13.6113 35.4586]
] def
/pairs [
[4 13]
] def
/unpairs [0 1 2 3 5 9 10 11 12 14 ] def
/gaps [6 ] def
/seq (5 K C    U  AG3) def
/Courier findfont 8 scalefont setfont 1 setlinejoin 1 setlinecap
drawbackbone drawgaps drawpairs drawends drawloop drawbases showpage
